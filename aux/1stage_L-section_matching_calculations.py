# @date        : Mon Mar 23 08:44:41 CET 2020
# @author(s)   : Francesco Urbani
# @file        : 
# @descritpion : Python calculations for 1 stage L-section matching network
#                
# RF Electronics class, Spring 2020


import sympy

sympy.init_printing()


R1 = sympy.Symbol("R1", real=True)      # Ω  
X1 = sympy.Symbol("X1", real=True)      # Ω 

R2 = sympy.Symbol("R2", real=True)      # Ω 
X2 = sympy.Symbol("X2", real=True)      # Ω 

Xshu = sympy.Symbol("Xshu", real=True)  # Ω 
Xser = sympy.Symbol("Xser", real=True)  # Ω 


#
#               shunt - series configuration 
#
#                             jXser
#                          +--------+
#           +-----------+--+        +----+
#           |           |  +--------+
#           |           |
#           |           |
#          +++         +++                                                   1
# Z1 =     | |         | | jXshu             Z2 = R2 + jX2 = jXser + -----------------
# R1 + jX1 | |         | |                                             1        1
#          +++         +++                                           ----- + --------
#           |           |                                            jXshu   R1 + jX1
#           |           |
#           |           |
#           +-----------+----------------+




Z2 = 1j*Xser + 1/(1/(1j*Xshu) + 1/(R1+1j*X1)) 
 

sympy.re(Z2)

#                               R₁
# ──────────────────────────────────────────────────────────────
#                 ⎛        2                                  2⎞
# ⎛  2         2⎞ ⎜      R₁           ⎛      1.0⋅X₁      1.0 ⎞ ⎟
# ⎝R₁  + 1.0⋅X₁ ⎠⋅⎜──────────────── + ⎜- ───────────── - ────⎟ ⎟
#                 ⎜               2   ⎜    2         2   Xshu⎟ ⎟
#                 ⎜⎛  2         2⎞    ⎝  R₁  + 1.0⋅X₁        ⎠ ⎟
#                 ⎝⎝R₁  + 1.0⋅X₁ ⎠                             ⎠




sympy.im(Z2)
#                            1.0⋅X₁      1.0
#                        ───────────── + ────
#                          2         2   Xshu
#                        R₁  + 1.0⋅X₁
# 1.0⋅Xser + ────────────────────────────────────────────
#                    2                                  2
#                  R₁           ⎛      1.0⋅X₁      1.0 ⎞
#            ──────────────── + ⎜- ───────────── - ────⎟
#                           2   ⎜    2         2   Xshu⎟
#            ⎛  2         2⎞    ⎝  R₁  + 1.0⋅X₁        ⎠
#            ⎝R₁  + 1.0⋅X₁ ⎠



"""
Re{Z2} = R2
Im{Z2} = X2

"""

eq1 = sympy.Eq( sympy.re(Z2), R2)
eq2 = sympy.Eq( sympy.im(Z2), X2)

S = sympy.solve((eq1, eq2), (Xshu, Xser))

# >>> S
#
# ⎡⎛           ___________________________             ___________________________⎞  
# ⎢⎜          ╱       ⎛  2             2⎞             ╱       ⎛  2             2⎞ ⎟  
# ⎢⎜R₂⋅X₁ - ╲╱  R₁⋅R₂⋅⎝R₁  - R₁⋅R₂ + X₁ ⎠   R₁⋅X₂ + ╲╱  R₁⋅R₂⋅⎝R₁  - R₁⋅R₂ + X₁ ⎠ ⎟  
# ⎢⎜──────────────────────────────────────, ──────────────────────────────────────⎟, 
# ⎣⎝               R₁ - R₂                                    R₁                  ⎠ 

# ⎛           ___________________________             ___________________________⎞⎤
# ⎜          ╱       ⎛  2             2⎞             ╱       ⎛  2             2⎞ ⎟⎥
# ⎜R₂⋅X₁ + ╲╱  R₁⋅R₂⋅⎝R₁  - R₁⋅R₂ + X₁ ⎠   R₁⋅X₂ - ╲╱  R₁⋅R₂⋅⎝R₁  - R₁⋅R₂ + X₁ ⎠ ⎟⎥
# ⎜──────────────────────────────────────, ──────────────────────────────────────⎟⎥
# ⎝               R₁ - R₂                                    R₁                  ⎠⎦

print(S)
# [
#     (
#         (R2*X1 - sqrt(R1*R2*(R1**2 - R1*R2 + X1**2)))/(R1 - R2), 
#         (R1*X2 + sqrt(R1*R2*(R1**2 - R1*R2 + X1**2)))/R1
#     ), 
#     (
#         (R2*X1 + sqrt(R1*R2*(R1**2 - R1*R2 + X1**2)))/(R1 - R2), 
#         (R1*X2 - sqrt(R1*R2*(R1**2 - R1*R2 + X1**2)))/R1
#     )
# ]






####################################################################################
####################################################################################
####################################################################################




#
#               series - shunt configuration
#
#
#                     jXser
#                   +--------+
#           +-------+        +----+--------------+
#           |       +--------+    |
#           |                     |
#           |                     |
#          +++                   +++                                          1
# Z1 =     | |                   | | jXshu        Z2 = R2 + jX2 = -------------------------
# R1 + jX1 | |                   | |                                1            1
#          +++                   +++                              ----  + ----------------
#           |                     |                               jXshu   R1 + jX1 + jXser
#           |                     |
#           |                     |
#           +---------------------+---------------+



Z2 = 1/(1/(1j*Xshu) + 1/(R1+1j*(Xser+X1)))
#               1
# ──────────────────────────────
#           1              1.0⋅ⅈ
# ────────────────────── - ─────
# R₁ + 1.0⋅ⅈ⋅(X₁ + Xser)    Xshu


sympy.re(Z2)
#                                                  R₁
# ───────────────────────────────────────────────────────────────────────────────────────────────────
#                              ⎛               2                                                   2⎞
# ⎛  2                      2⎞ ⎜             R₁                 ⎛    -1.0⋅X₁ - 1.0⋅Xser       1.0 ⎞ ⎟
# ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠⋅⎜───────────────────────────── + ⎜────────────────────────── - ────⎟ ⎟
#                              ⎜                            2   ⎜  2                      2   Xshu⎟ ⎟
#                              ⎜⎛  2                      2⎞    ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser)        ⎠ ⎟
#                              ⎝⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠                                        ⎠


sympy.im(Z2)

#                       -1.0⋅X₁ - 1.0⋅Xser       1.0
#                 - ────────────────────────── + ────
#                     2                      2   Xshu
#                   R₁  + (1.0⋅X₁ + 1.0⋅Xser)
# ────────────────────────────────────────────────────────────────────
#                2                                                   2
#              R₁                 ⎛    -1.0⋅X₁ - 1.0⋅Xser       1.0 ⎞
# ───────────────────────────── + ⎜────────────────────────── - ────⎟
#                             2   ⎜  2                      2   Xshu⎟
# ⎛  2                      2⎞    ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser)        ⎠
# ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠


eq1 = sympy.Eq( sympy.re(Z2), R2)
#                                                  R₁
# ─────────────────────────────────────────────────────────────────────────────────────────────────── = R₂
#                              ⎛               2                                                   2⎞
# ⎛  2                      2⎞ ⎜             R₁                 ⎛    -1.0⋅X₁ - 1.0⋅Xser       1.0 ⎞ ⎟
# ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠⋅⎜───────────────────────────── + ⎜────────────────────────── - ────⎟ ⎟
#                              ⎜                            2   ⎜  2                      2   Xshu⎟ ⎟
#                              ⎜⎛  2                      2⎞    ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser)        ⎠ ⎟
#                              ⎝⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠                                        ⎠
#

eq2 = sympy.Eq( sympy.im(Z2), X2)
#                       -1.0⋅X₁ - 1.0⋅Xser       1.0
#                 - ────────────────────────── + ────
#                     2                      2   Xshu
#                   R₁  + (1.0⋅X₁ + 1.0⋅Xser)
# ──────────────────────────────────────────────────────────────────── = X₂
#                2                                                   2
#              R₁                 ⎛    -1.0⋅X₁ - 1.0⋅Xser       1.0 ⎞
# ───────────────────────────── + ⎜────────────────────────── - ────⎟
#                             2   ⎜  2                      2   Xshu⎟
# ⎛  2                      2⎞    ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser)        ⎠
# ⎝R₁  + (1.0⋅X₁ + 1.0⋅Xser) ⎠


S = sympy.solve((eq1, eq2), (Xshu, Xser))


# ⎡⎛           ____________________________   ⎛           ____________________________⎞ ⎞  
# ⎢⎜          ╱       ⎛           2     2⎞    ⎜          ╱       ⎛           2     2⎞ ⎟ ⎟  
# ⎢⎜R₁⋅X₂ - ╲╱  R₁⋅R₂⋅⎝-R₁⋅R₂ + R₂  + X₂ ⎠   -⎝R₂⋅X₁ + ╲╱  R₁⋅R₂⋅⎝-R₁⋅R₂ + R₂  + X₂ ⎠ ⎠ ⎟  
# ⎢⎜───────────────────────────────────────, ───────────────────────────────────────────⎟, 
# ⎣⎝                R₁ - R₂                                       R₂                    ⎠  

# ⎛           ____________________________              ____________________________⎞⎤
# ⎜          ╱       ⎛           2     2⎞              ╱       ⎛           2     2⎞ ⎟⎥
# ⎜R₁⋅X₂ + ╲╱  R₁⋅R₂⋅⎝-R₁⋅R₂ + R₂  + X₂ ⎠   -R₂⋅X₁ + ╲╱  R₁⋅R₂⋅⎝-R₁⋅R₂ + R₂  + X₂ ⎠ ⎟⎥
# ⎜───────────────────────────────────────, ────────────────────────────────────────⎟⎥
# ⎝                R₁ - R₂                                     R₂                   ⎠⎦

print(S)
# [
#     (
#         (R1*X2 - sqrt(R1*R2*(-R1*R2 + R2**2 + X2**2)))/(R1 - R2), 
#         -(R2*X1 + sqrt(R1*R2*(-R1*R2 + R2**2 + X2**2)))/R2
#     )
#     , 
#     (
#         (R1*X2 + sqrt(R1*R2*(-R1*R2 + R2**2 + X2**2)))/(R1 - R2), 
#         (-R2*X1 + sqrt(R1*R2*(-R1*R2 + R2**2 + X2**2)))/R2
#     )
# ]

